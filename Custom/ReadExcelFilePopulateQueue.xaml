<Activity mc:Ignorable="sap sap2010" x:Class="ReadExcelFilePopulateQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_FolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_Queue" Type="InArgument(x:String)" />
    <x:Property Name="io_QueueCountsErrors" Type="InOutArgument(s:String[])" />
    <x:Property Name="io_FilenamesProcessed" Type="InOutArgument(x:String)" />
    <x:Property Name="io_FilenamesNotProcessed" Type="InOutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1398,6907</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ReadExcelFilePopulateQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="44">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.MicrosoftOffice365.Persistence</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="55">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Reads an excel file and populates a queue using the rows from within that file.&#xA;&#xA;Process returns a string array (that is passed in as an argument) containing counts of any errors and files processed, as well as any error messages. Exact format is as follow:&#xA;&#xA;Numbers represent index of array.&#xA;0: total rows of file less header row&#xA;1: total to attempt to add to queue&#xA;2: total not being added to queue&#xA;3: total add-to-queue errors&#xA;4: any error messages&#xA;5: total files processed" DisplayName="ReadExcelFilePopulateQueue" sap:VirtualizedContainerService.HintSize="1172,6842" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="0" Name="FilesProcessedCount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - ReadExcelFilePopulateQueue start" sap:VirtualizedContainerService.HintSize="1110,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Starting ReadExcelFilePopulateQueue workflow&quot;]" />
    <ui:ForEachFileX DisplayName="For Each File in Folder Path" Filter="*.xlsx" Folder="[in_FolderPath]" sap:VirtualizedContainerService.HintSize="1110,6010" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do for Each File" sap:VirtualizedContainerService.HintSize="1076,5751" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Increment files processed count" sap:VirtualizedContainerService.HintSize="1014,70" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[FilesProcessedCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[FilesProcessedCount + 1]</InArgument>
              </Assign.Value>
            </Assign>
            <TryCatch DisplayName="Try Catch - process file" sap:VirtualizedContainerService.HintSize="1014,5409" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence DisplayName="Populate Queue process Try block" sap:VirtualizedContainerService.HintSize="976,5172" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope for Each File" sap:VirtualizedContainerService.HintSize="914,4678" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do in Excel Scope for Each File" sap:VirtualizedContainerService.HintSize="880,4582" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" AutoSave="False" DisplayName="Use Excel File in Excel Scope for Each File" sap:VirtualizedContainerService.HintSize="818,4460" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[CurrentFile.FullName]">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Process sheet rows to add to queue" sap:VirtualizedContainerService.HintSize="784,4182" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message - Reading current file" sap:VirtualizedContainerService.HintSize="722,101" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;reading excel file &quot; + CurrentFile.Name]" />
                                  <ueab:ForEachSheetX DisplayName="For Each Excel Sheet within the Excel file" sap:VirtualizedContainerService.HintSize="722,3919" sap2010:WorkflowViewState.IdRef="ForEachSheetX_2" Workbook="[Excel]">
                                    <ueab:ForEachSheetX.Body>
                                      <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                        <ActivityAction.Argument1>
                                          <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                        </ActivityAction.Argument1>
                                        <ActivityAction.Argument2>
                                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                        </ActivityAction.Argument2>
                                        <Sequence DisplayName="Do for each sheet" sap:VirtualizedContainerService.HintSize="688,3754" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message - reading current sheet" sap:VirtualizedContainerService.HintSize="626,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;reading sheet &quot; + CurrentSheet.Name]" />
                                          <If Condition="[LCase(CurrentSheet.Name) = &quot;sheet1&quot;]" DisplayName="If sheet name is sheet1" sap:VirtualizedContainerService.HintSize="626,3491" sap2010:WorkflowViewState.IdRef="If_1">
                                            <If.Then>
                                              <Sequence DisplayName="Sheet name is sheet1" sap:VirtualizedContainerService.HintSize="544,3105" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Sheet" />
                                                  <Variable x:TypeArguments="sd:DataTable" Name="dt_BulkAddErrors" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:BuildDataTable DataTable="[dt_Sheet]" DisplayName="Build Data Table for adding to queue" sap:VirtualizedContainerService.HintSize="482,69" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;BU&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ASSET&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PIID&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;INVDT&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PERFORMED&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reference&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                                                <ui:LogMessage DisplayName="Log Message - Building data table" sap:VirtualizedContainerService.HintSize="482,101" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Building data table for add to queue&quot;]" />
                                                <ui:LogMessage DisplayName="Log Message - total rows" sap:VirtualizedContainerService.HintSize="482,101" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Current sheet has &quot; + (CurrentSheet.RowCount - 1).ToString + &quot; rows&quot;]" />
                                                <Assign sap2010:Annotation.AnnotationText="First item in array is the total amount of rows in each of the Excel files, minus the first header row. This corresponds to the total possible rows that can be added to the queue." DisplayName="Assign total rows" sap:VirtualizedContainerService.HintSize="482,157" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(0)]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(io_QueueCountsErrors(0)) + (CurrentSheet.RowCount - 1)).ToString]</InArgument>
                                                  </Assign.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Assign>
                                                <ueab:ExcelForEachRowX DisplayName="For Each Excel Row within sheet1" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="482,281" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" Range="[CurrentSheet]" SaveAfterEachRow="False">
                                                  <ueab:ExcelForEachRowX.Body>
                                                    <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                                      <ActivityAction.Argument1>
                                                        <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="Row" />
                                                      </ActivityAction.Argument1>
                                                      <ActivityAction.Argument2>
                                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                                      </ActivityAction.Argument2>
                                                      <Sequence DisplayName="Do - add to data table" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:Boolean" Name="IsGoodRow" />
                                                          <Variable x:TypeArguments="x:String" Name="BU" />
                                                          <Variable x:TypeArguments="x:String" Name="ASSET" />
                                                          <Variable x:TypeArguments="x:String" Name="PIID" />
                                                          <Variable x:TypeArguments="x:String" Name="INVDT" />
                                                          <Variable x:TypeArguments="x:String" Name="PERFORMED" />
                                                        </Sequence.Variables>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <Assign sap2010:Annotation.AnnotationText="Check to see if all fields are populated. If not, then accessing a value will throw an error. If all fields are populated, then the row will be added to the queue, otherwise it will be skipped." DisplayName="Assign IsGoodRow - check if all fields are populated" sap:VirtualizedContainerService.HintSize="626,161" sap2010:WorkflowViewState.IdRef="Assign_1">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Boolean">[IsGoodRow]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Boolean" xml:space="preserve">[(Not String.IsNullOrEmpty(Row("BU").ToString)) And 
(Not String.IsNullOrEmpty(Row("ASSET").ToString)) And 
(Not String.IsNullOrEmpty(Row("PIID").ToString)) And
(Not String.IsNullOrEmpty(Row("INVDT").ToString)) And
(Not String.IsNullOrEmpty(Row("PERFORMED").ToString))]</InArgument>
                                                          </Assign.Value>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Assign>
                                                        <If Condition="[IsGoodRow]" DisplayName="If all data present in row" sap:VirtualizedContainerService.HintSize="626,1823" sap2010:WorkflowViewState.IdRef="If_2">
                                                          <If.Then>
                                                            <Sequence DisplayName="All data present in row" sap:VirtualizedContainerService.HintSize="493,622" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="x:String" Name="Reference" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:MultipleAssign DisplayName="Assign Data Table and conditional variables" sap:VirtualizedContainerService.HintSize="431,265" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                                                <ui:MultipleAssign.AssignOperations>
                                                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[BU]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Row("BU").ToString.Trim]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[ASSET]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Row("ASSET").ToString.Trim]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[PIID]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Row("PIID").ToString.Trim]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[INVDT]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Row("INVDT").ToString.Trim]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[PERFORMED]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Row("PERFORMED").ToString.Trim]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                                                      <ui:AssignOperation.To>
                                                                        <OutArgument x:TypeArguments="x:String">[Reference]</OutArgument>
                                                                      </ui:AssignOperation.To>
                                                                      <ui:AssignOperation.Value>
                                                                        <InArgument x:TypeArguments="x:String">[Environment.MachineName + Environment.UserName + "-" + BU + ASSET + PIID + INVDT + INVDT + PERFORMED + DateTime.Now.ToString]</InArgument>
                                                                      </ui:AssignOperation.Value>
                                                                    </ui:AssignOperation>
                                                                  </scg:List>
                                                                </ui:MultipleAssign.AssignOperations>
                                                              </ui:MultipleAssign>
                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{BU ,ASSET, PIID, INVDT, PERFORMED, Reference}]" DataTable="[dt_Sheet]" DisplayName="Add Data Row to data table" sap:VirtualizedContainerService.HintSize="431,195" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <Sequence DisplayName="Not all data present in row" sap:VirtualizedContainerService.HintSize="544,1038" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:LogMessage DisplayName="Log Message - Row is missing fields" sap:VirtualizedContainerService.HintSize="482,101" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Row is missing fields. Skipping add to queue for row as cell at location &quot; + Row.Address + &quot; is empty/null&quot;]" />
                                                              <Assign DisplayName="Increment invalid row count" sap:VirtualizedContainerService.HintSize="482,70" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(2)]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(io_QueueCountsErrors(2)) + 1).ToString]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <If Condition="[io_QueueCountsErrors(4) is &quot;None&quot;]" DisplayName="Is default error text" sap:VirtualizedContainerService.HintSize="482,665" sap2010:WorkflowViewState.IdRef="If_5">
                                                                <If.Then>
                                                                  <Sequence DisplayName="Remove default message and add error message" sap:VirtualizedContainerService.HintSize="400,306" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Assign DisplayName="Clear default error message" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(4)]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">
                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                        </InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign DisplayName="If - Add description of invalid data for end process email" sap:VirtualizedContainerService.HintSize="338,74" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(4)]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_QueueCountsErrors(4) + 
Environment.NewLine + 
"Cell at location " + Row.Address + " is empty/null"]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Sequence DisplayName="Add to existing error" sap:VirtualizedContainerService.HintSize="400,196" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Assign DisplayName="Then - Add description of invalid data for end process email" sap:VirtualizedContainerService.HintSize="338,74" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(4)]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[io_QueueCountsErrors(4) + 
Environment.NewLine + 
"Cell at location " + Row.Address + " is empty/null"]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </If.Else>
                                                              </If>
                                                            </Sequence>
                                                          </If.Else>
                                                        </If>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ueab:ExcelForEachRowX.Body>
                                                </ueab:ExcelForEachRowX>
                                                <If Condition="[dt_Sheet.Rows.Count &gt; 0]" DisplayName="If data table row length is greater than 0" sap:VirtualizedContainerService.HintSize="482,1315" sap2010:WorkflowViewState.IdRef="If_3">
                                                  <If.Then>
                                                    <Sequence DisplayName="Add data table rows to Queue" sap:VirtualizedContainerService.HintSize="400,929" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message - adding rows to queue" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Adding &quot; + dt_Sheet.Rows.Count.ToString + &quot; records to queue&quot;]" />
                                                      <Assign sap2010:Annotation.AnnotationText="Set the total amount of rows to be added to the queue. This is the total rows less any invalid rows." DisplayName="Set Processing Count" sap:VirtualizedContainerService.HintSize="338,127" sap2010:WorkflowViewState.IdRef="Assign_2">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(1)]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(io_QueueCountsErrors(1)) + dt_sheet.Rows.Count).ToString]</InArgument>
                                                        </Assign.Value>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Assign>
                                                      <ui:BulkAddQueueItems CommitType="ProcessAllIndependently" ContinueOnError="True" DisplayName="Bulk Add Queue Items using data table" FolderPath="UITS" sap:VirtualizedContainerService.HintSize="338,499" sap2010:WorkflowViewState.IdRef="BulkAddQueueItems_2" QueueItemsDataTable="[dt_Sheet]" QueueName="FinancePhysicalAssetHistory" Result="[dt_BulkAddErrors]" TimeoutMS="60000" />
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Don't add data table rows to queue" sap:VirtualizedContainerService.HintSize="400,223" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message - skipping add to queue" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Data table rows length is 0. Skipping add to queue&quot;]" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                                <If Condition="[dt_BulkAddErrors.RowCount &gt; 0]" DisplayName="If there are any add-to-queue errors" sap:VirtualizedContainerService.HintSize="482,719" sap2010:WorkflowViewState.IdRef="If_4">
                                                  <If.Then>
                                                    <Sequence DisplayName="Change count of CountsErrors variable" sap:VirtualizedContainerService.HintSize="400,333" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message - add to queue error" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;There were &quot; + dt_BulkAddErrors.RowCount.ToString + &quot; errors during add to queue&quot;]" />
                                                      <Assign DisplayName="Assign add-to-queue error count" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(3)]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(io_QueueCountsErrors(3)) + dt_BulkAddErrors.RowCount).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Everything was added to the queue!" sap:VirtualizedContainerService.HintSize="400,223" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:LogMessage DisplayName="Log Message - everything added to queue" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;No errors during add to queue&quot;]" />
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Sheet name is not sheet1" sap:VirtualizedContainerService.HintSize="400,223" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:LogMessage DisplayName="Log Message - else block" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Skipping sheet &quot; + CurrentSheet.Name + &quot; as it's name is not `Sheet1` (as required in the PDD)&quot;]" />
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ueab:ForEachSheetX.Body>
                                  </ueab:ForEachSheetX>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="914,332" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,244" sap2010:WorkflowViewState.IdRef="Sequence_28">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Move file after processing - MoveFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Custom\MoveFile.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[CurrentFile.FullName]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TargetFolder">[CurrentFile.Directory.FullName + "\Processed"]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="980,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Process file catch block" sap:VirtualizedContainerService.HintSize="400,495" sap2010:WorkflowViewState.IdRef="Sequence_27">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message - Exception during processing" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Error" Message="[&quot;Error during file processing: &quot; + exception.Message]" />
                      <Assign DisplayName="Add filename to not-processed variable" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[io_FilenamesNotProcessed]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[io_FilenamesNotProcessed + CurrentFile.Name.ToString + Environment.NewLine]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Custom\MoveFile.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[CurrentFile.FullName]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_TargetFolder">[CurrentFile.Directory.FullName + "\Errors"]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
            <Assign DisplayName="Add filename to processed filenames variable" sap:VirtualizedContainerService.HintSize="1014,70" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[io_FilenamesProcessed]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[io_FilenamesProcessed + CurrentFile.Name.ToString + Environment.NewLine]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachFileX>
    <ui:LogMessage DisplayName="Log Message - total files processed" sap:VirtualizedContainerService.HintSize="1110,101" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Processed &quot; + FilesProcessedCount.ToString + &quot; file(s)&quot;]" />
    <Assign DisplayName="Assign total files" sap:VirtualizedContainerService.HintSize="1110,70" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[io_QueueCountsErrors(5)]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FilesProcessedCount.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message - ReadExcelFilePopulateQueue end" sap:VirtualizedContainerService.HintSize="1110,101" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Ending ReadExcelFilePopulateQueue workflow&quot;]" />
  </Sequence>
</Activity>